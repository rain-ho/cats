CREATE OR REPLACE FUNCTION calculate_risk()
RETURNS TRIGGER AS $$
DECLARE 
    risk NUMERIC;
    risk1 NUMERIC;
    risk2 NUMERIC;
    risk3 NUMERIC;
    risk4 NUMERIC;
    total_risk NUMERIC;
BEGIN    
    SELECT ABS(NEW.temperature - 20) INTO risk; --TEMP
    UPDATE risk_analysis
    SET temprisk = risk
    WHERE artwork_a_id = NEW.artwork_a_id;

    SELECT ABS(NEW.humidity - 50) INTO risk1; --HUM
    UPDATE risk_analysis
    SET humrisk = risk1
    WHERE artwork_a_id = NEW.artwork_a_id;

    SELECT ABS((NEW.vibration / 1000) - 17) INTO risk2; -- LIGHT
    UPDATE risk_analysis
    SET vibrisk = risk2
    WHERE artwork_a_id = NEW.artwork_a_id;

    IF NEW.smoke > 1200 THEN
        UPDATE risk_analysis
        SET smkrisk = 10001
        WHERE artwork_a_id = NEW.artwork_a_id;
        risk3 := 10001;
    END IF;

    IF NEW.movement < 0.8 THEN
        UPDATE risk_analysis
        SET movrisk = 10001
        WHERE artwork_a_id = NEW.artwork_a_id;
        risk4 := 10001;
    END IF;
    
    total_risk := COALESCE(risk, 0) + COALESCE(risk1, 0) + COALESCE(risk2, 0) + COALESCE(risk3, 0) + COALESCE(risk4, 0);
    UPDATE risk_analysis
    SET riskreps = total_risk
    WHERE artwork_a_id = NEW.artwork_a_id;
    
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER calculate_risk_trigger
BEFORE INSERT OR UPDATE ON your_table
FOR EACH ROW
EXECUTE FUNCTION calculate_risk();
